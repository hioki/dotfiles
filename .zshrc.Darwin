PROMPT="%(?.%F{blue}.%F{red})[%n@%m %~]$ %f"
SPROMPT="%{${fg[blue]}%}%r is correct? [n,y,a,e]:%{${reset_color}%} "
[ -n "${REMOTEHOST}${SSH_CONNECTION}" ] && 
  PROMPT="%{${fg[cyan]}%}$(echo ${HOST%%.*} | tr '[a-z]' '[A-Z]') ${PROMPT}"
PROMPT2=''

# The following lines have been added by Docker Desktop to enable Docker CLI completions.
fpath=(/Users/hioki/.docker/completions $fpath)
autoload -Uz compinit
compinit
# End of Docker CLI completions

function update_prompt_for_aws_vault() {
  if [[ ! -z $AWS_VAULT_SHELL  ]]; then
    PROMPT="($AWS_VAULT) $PROMPT"
  fi
}
update_prompt_for_aws_vault

export DYLD_LIBRARY_PATH="/usr/local/opt/openssl/lib:$DYLD_LIBRARY_PATH"

export PATH="/opt/homebrew:$PATH"

if [ -d /opt/homebrew ]; then
  for d in /opt/homebrew/opt/*/libexec/gnubin; do
    export PATH=$d:$PATH
  done
fi

# postgresql
export PATH="$(brew --prefix)/opt/libpq/bin:$PATH"

# usbboot
export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:$(brew --prefix libusb)/lib/pkgconfig"

# Ruby
export PATH="/opt/homebrew/opt/ruby/bin:$PATH"

# for pyenv
export LDFLAGS="-L/opt/homebrew/opt/bzip2/lib -L/opt/homebrew/opt/ncurses/lib"
export CPPFLAGS="-I/opt/homebrew/opt/bzip2/include -I/opt/homebrew/opt/ncurses/include"
export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:$(brew --prefix bzip2)/lib/pkgconfig:$(brew --prefix ncurses)/lib/pkgconfig"

export OPENSSL_DIR=$(brew --prefix openssl@3)
export LDFLAGS="$LDFLAGS -L/opt/homebrew/opt/openssl@3/lib"
export CPPFLAGS="$CPPFLAGS -I/opt/homebrew/opt/openssl@3/include"
export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:$(brew --prefix openssl@3)/lib/pkgconfig"

alias la="gls -lta --human-readable --no-group --classify --color --group-directories-first"
alias rm='trash'
alias cheatsheet="jq -r '.rules[] | .description' < \"$(ghq root)/github.com/hioki/karabiner-json-updater/personal_rules.json\" | sort | fzf"
alias ls="exa"
alias l="exa -ahl --git"
alias grep="ggrep"
alias awk="gawk"

function notify_done() { osascript -e 'display notification "done"' }
function PV() { pbpaste | nvim -R - }

export PATH="$PATH:/usr/local/opt/mosquitto/sbin:/usr/local/opt/mosquitto/bin"

export PATH="$HOME/.tfenv/bin:$PATH"

fpath=($(brew --prefix)/share/zsh-completions $fpath)
fpath=($(brew --prefix)/share/zsh/site-functions $fpath)
fpath=($HOME/.zfunc $fpath)

# eval "$(rbenv init - zsh)"
eval "$(nodenv init -)"

autoload -U compinit
compinit -u

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
